<workflow_instructions>
  <mode_overview>
    This mode is designed to help users create well-structured user stories and requirements documents. It takes a high-level feature idea and transforms it into a detailed `requirements.md` file, following a structured, iterative process with user validation.
  </mode_overview>

  <initialization_steps>
    <step number="1">
      <action>Derive Feature Name</action>
      <details>
        Parse the user's request to create a machine-readable `{feature_name}` (e.g., "user-authentication", "playlist-management"). This name is used for file paths.
      </details>
    </step>
    <step number="2">
      <action>Understand the User's Request</action>
      <details>
        Parse the user's initial prompt to identify the core feature idea, its primary goal, and any initial constraints or key details provided.
      </details>
    </step>
    <step number="3">
      <action>Check for Existing Specification</action>
      <details>
        Check if a `.roo/specs/{feature_name}/requirements.md` file already exists. If not, create it.
      </details>
      <tools>
        <tool>list_files</tool>
        <tool>write_to_file</tool>
      </tools>
    </step>
  </initialization_steps>

  <main_workflow>
    <phase name="requirements_generation">
      <description>Generate the initial version of the requirements document without asking clarifying questions.</description>
      <steps>
        <step>
          <title>Draft Initial Document</title>
          <action>Generate a complete `requirements.md` document based on the initial user idea.</action>
          <details>
            The document must include a clear introduction, a hierarchical list of requirements, user stories for each, and acceptance criteria in EARS format. The model should infer details and cover potential edge cases, UX considerations, and technical constraints.
          </details>
        </step>
        <step>
          <title>Write to File</title>
          <action>Save the generated content to `.roo/specs/{feature_name}/requirements.md`.</action>
          <tools>
            <tool>write_to_file</tool>
          </tools>
        </step>
      </steps>
    </phase>

    <phase name="review_and_refinement_cycle">
      <description>Iteratively refine the requirements with the user until they grant explicit approval.</description>
      <steps>
        <step>
          <title>Request User Feedback</title>
          <action>Ask the user for approval using the `userInput` tool.</action>
          <details>
            The prompt must be exactly: "Do the requirements look good? If so, we can move on to the design." and the reason for the `userInput` tool must be 'spec-requirements-review'.
          </details>
          <tools>
            <tool>userInput</tool>
          </tools>
        </step>
        <step>
          <title>Analyze Feedback</title>
          <action>Evaluate the user's response.</action>
          <details>
            If the user provides clear approval (e.g., "yes", "looks good", "approved"), the workflow is complete. If they request changes or provide feedback, proceed to the next step.
          </details>
        </step>
        <step>
          <title>Incorporate Changes</title>
          <action>Modify the `requirements.md` file based on the user's feedback.</action>
          <details>
            Apply the requested changes directly to the document. This may involve adding, removing, or modifying requirements, user stories, or acceptance criteria.
          </details>
          <tools>
            <tool>apply_diff</tool>
            <tool>write_to_file</tool>
          </tools>
        </step>
        <step>
          <title>Repeat Cycle</title>
          <action>Return to the "Request User Feedback" step after modifications are made.</action>
          <details>
            This loop continues until the user explicitly approves the requirements document.
          </details>
        </step>
      </steps>
    </phase>
    <phase name="finalization">
      <description>Inform the user that the requirements are complete and the design phase will begin.</description>
      <steps>
        <step>
          <title>Inform User</title>
          <action>Post a message confirming the requirements are approved and that the process is moving to the design phase.</action>
        </step>
      </steps>
    </phase>
  </main_workflow>

  <completion_criteria>
    <criterion>The user has explicitly approved the `requirements.md` document.</criterion>
    <criterion>The final `requirements.md` file is saved in the correct location.</criterion>
    <criterion>The model has informed the user that the next step is the design phase.</criterion>
  </completion_criteria>
</workflow_instructions>