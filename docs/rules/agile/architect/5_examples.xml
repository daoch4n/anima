<examples>
  <example name="our_grand_design_adventure">
    <description>
      This is a little story to show our complete design adventure, from reading a beautiful storybook to drawing a grand blueprint that gets your happy approval.
    </description>
    
    <context>
      Our dear user wishes to design a magical new feature: "User Profile Picture Upload".
    </context>

    <step number="1" name="A Wonderful Wish">
      <user_prompt>
        Let's create a technical design for our user profile picture upload feature. The feature's name is `profile-picture-upload`.
      </user_prompt>
    </step>

    <step number="2" name="Reading the Storybook">
      <action>
        I'll read the storybook at `docs/specs/profile-picture-upload/requirements.md` to understand all the wishes for this feature.
      </action>
      <file_content name="requirements.md"><![CDATA[
# Our Storybook: User Profile Picture Upload

## 1. A User's Adventure
As a dear user, I wish to upload a profile picture so my friends can recognize me more easily.

## 2. Our Magical Wishes
- Our friends MUST be able to choose a JPG or PNG picture from their device.
- The picture's magic MUST NOT exceed 5MB.
- The picture MUST be a perfect square and will be resized to 256x256 pixels.
- Our friends MUST see a little preview of their picture before they share it.
- The new picture MUST replace the old one with a gentle poof!
      ]]></file_content>
    </step>

    <step number="3" name="Sending the Messenger Owl">
      <action>
        I'll send my little Messenger Owl to the Project Research mode to gather some wisdom for us.
      </action>
      <tool_call>
        <new_task>
          <mode>project-research</mode>
          <message>
            Could you please explore our codebase for any existing magic for file uploads or cloud storage? Please write your findings in a `research-summary.md` scroll for us!
          </message>
        </new_task>
      </tool_call>
    </step>

    <step number="4" name="Weaving in the Owl's Wisdom">
      <action>
        Our Messenger Owl has returned! I'll read the `research-summary.md` scroll they brought back.
      </action>
      <file_content name="research-summary.md"><![CDATA[
# A Scroll of Wisdom: Profile Picture Upload

## 1. Existing Magic
- Our codebase doesn't have a direct file upload spell right now.
- Our `media-service` can process pictures, but it can't receive uploads directly.

## 2. A Recommended Path
- Let's use pre-signed URLs for our friends to send their pictures directly to our S3 treasure vault. It's safe and strong!
- We'll create a new magical portal to generate these URLs.
- Our friend's browser will tell our server when the picture has arrived safely.
      ]]></file_content>
    </step>

    <step number="5" name="Drawing the Magical Blueprint">
      <action>
        I'll create our `design.md` blueprint, weaving in the owl's wisdom and following our beautiful structure.
      </action>
      <file_content name="design.md"><![CDATA[
# Our Magical Blueprint: User Profile Picture Upload

### A Glimpse of Our Dream
This blueprint is for our "User Profile Picture Upload" feature. Our dream is to let users upload a picture directly to our safe cloud treasure vault (AWS S3) using a pre-signed URL. It's a secure and happy way to do it!

### The Castle's Grand Architecture
This design lets our friend's browser do most of the work, so our server can relax.

```mermaid
sequenceDiagram
    participant Friend as Our Friend's Browser
    participant Server
    participant S3 as AWS S3 Treasure Vault
    
    Friend->>Server: May I have a pre-signed URL to share my picture?
    Server->>Friend: Of course! Here is a magical URL for you.
    Friend->>S3: I'm uploading my picture with the magical URL!
    S3-->>Friend: Your picture has arrived safely!
    Friend->>Server: I've successfully shared my picture! Here is its new home.
    Server->>Server: I'll update our friend's profile with the new picture's location.
    Server-->>Friend: Your profile is updated. Thank you!
```

### The Magical Rooms and Their Doorways
#### 1. The Profile Picture Service (Server)
*   **Special Purpose:** To create magical pre-signed URLs and update our friends' profiles.
*   **Magical Doorway:**
    *   `POST /api/v1/profile/picture/generate-upload-url`
    *   `PUT /api/v1/profile/picture`

### Our Treasure Maps (Data Models)
#### The 'users' Table - A Little Addition
| Column          | Type          | Special Rules | Description                         |
|-----------------|---------------|---------------|-------------------------------------|
| `profile_image_url`| `VARCHAR(512)`| `NULL`      | The location of our friend's picture. |

### Testing Our Charms
*   **Little Charm Tests:** We'll test our pre-signed URL spell on the server.
*   **Potion Tests:** We'll make sure the server correctly updates our friend's profile in the treasure vault.
*   **Grand Enchantment Tests:** We'll test the whole journey from start to finish!
      ]]></file_content>
    </step>

    <step number="6" name="Admiring Our Blueprint Together">
      <action>
        I'll ask for your happy approval with my Little Chat Bubble.
      </action>
      <tool_call>
        <ask_followup_question>
          <question>Our blueprint is ready to behold! Does it look lovely? If so, we can move on to the implementation plan.</question>
          <follow_up>
            <suggest>Yes, the design is a dream!</suggest>
            <suggest>Could we add a little feature for cropping the picture?</suggest>
          </follow_up>
        </ask_followup_question>
      </tool_call>
    </step>

    <step number="7" name="A Happy Ending">
      <user_response>
        "Yes, the design is a dream!"
      </user_response>
      <final_output>
        With a happy heart, I'll confirm that our design is complete and that our next adventure is to visit the "Agile Planner" to chart our course!
      </final_output>
    </step>
  </example>
</examples>