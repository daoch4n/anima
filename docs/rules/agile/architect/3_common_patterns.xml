<design_patterns>
  <overview>
    This little scroll holds our magical templates for drawing our `design.md` blueprint. Let's use them to make our designs consistent and full of wonder!
  </overview>

  <section_pattern name="A Glimpse of Our Dream (Overview)">
    <description>A sweet, high-level summary of our feature and the magical solution we've dreamed up.</description>
    <template>
### A Glimpse of Our Dream

This blueprint tells the tale of our **{Feature Name}** feature. Our dream is to {a sweet description of the user's goal}. The magical solution we've imagined involves {a little summary of the technical magic, e.g., creating a new whispering service, adding a new magical portal, expanding our treasure vault}. This design will ensure our creation is {mention its lovely qualities, e.g., scalable, easy to care for, and safe}.
    </template>
  </section_pattern>

  <section_pattern name="The Castle's Grand Architecture">
    <description>A beautiful drawing of our castle's architecture, with a lovely diagram.</description>
    <template>
### The Castle's Grand Architecture

Our castle follows the {architectural style, e.g., Whispering Services, Event-Driven} style of magic. The main magical rooms are {list of main rooms}. The drawing below shows how they all connect and how magic flows between them.

```mermaid
graph TD
    A[Our Friend's Interface] -->|Sends a Wish| B(Magical Gateway);
    B -->|Forwards to| C{Feature Service};
    C -->|Reads/Writes| D[(Treasure Vault)];
    C -->|Publishes a Sparkle| E((Whispering Winds));
```

**The Flow of Magic:**
1.  Our friend sends a wish from the User Interface to the Magical Gateway.
2.  The Gateway checks the wish and gently forwards it to the Feature Service.
3.  The Feature Service works its magic, chatting with the Treasure Vault.
4.  When it's done, it sends a sparkle of news on the Whispering Winds for other services to hear.
    </template>
  </section_pattern>

  <section_pattern name="The Magical Rooms and Their Doorways">
    <description>A closer look at each room in our castle and its magical doorways.</description>
    <template>
### The Magical Rooms and Their Doorways

#### 1. The Feature Service
*   **Special Purpose:** To hold all the magical logic for our {Feature Name} feature.
*   **Magical Doorway:**
    *   `POST /api/v1/feature`: Creates a new magical treasure.
        *   **Request Wish:** `{...}`
        *   **Response Sparkle:** `{...}`

#### 2. The Treasure Vault Keeper
*   **Special Purpose:** To care for all interactions with our treasure vault.
*   **Magical Doorway:**
    *   `getTreasureById(id: string): Promise<Treasure>`
    *   `createTreasure(data: TreasureData): Promise<Treasure>`
    </template>
  </section_pattern>

  <section_pattern name="Our Treasure Maps (Data Models)">
    <description>The secret scrolls that define our new or modified magical treasures.</description>
    <template>
### Our Treasure Maps

#### The 'treasures' Table
| Column        | Type          | Special Rules            | Description                  |
|---------------|---------------|--------------------------|------------------------------|
| `id`          | `UUID`        | `PRIMARY KEY`            | A unique magical identifier. |
| `name`        | `VARCHAR(255)`| `NOT NULL`               | The treasure's name.         |
| `created_at`  | `TIMESTAMPZ`  | `NOT NULL, DEFAULT NOW()`| When the treasure appeared.  |
| `is_active`   | `BOOLEAN`     | `NOT NULL, DEFAULT true` | If the treasure is sparkling. |
    </template>
  </section_pattern>

  <section_pattern name="When Magic Goes Awry (Error Handling)">
    <description>Our little book of spells for handling magical mishaps gracefully.</description>
    <template>
### When Magic Goes Awry

Mishaps are handled in our service rooms and returned with kind messages.

| Status Code | Mishap Type           | Reason                                      |
|-------------|-----------------------|---------------------------------------------|
| `400`       | `A Puzzling Wish`     | The wish from our friend was a bit confusing. |
| `404`       | `Lost Treasure`       | The requested treasure seems to be hiding.  |
| `409`       | `A Familiar Treasure` | This treasure already exists in our vault.    |
| `500`       | `A Magical Hiccup`    | An unexpected sparkle happened in the castle. |

All mishaps will be noted in our magical logbook with a unique star-code to help us understand what happened.
    </template>
  </section_pattern>

  <section_pattern name="Testing Our Charms (Testing Strategy)">
    <description>Our plan for making sure every little charm and spell works perfectly.</description>
    <template>
### Testing Our Charms

We'll test our magic in many ways to ensure it's strong and true.

*   **Little Charm Tests (Unit Tests):** Every little spell in our Feature Service and Treasure Vault Keeper will be tested on its own.
*   **Potion Tests (Integration Tests):** We'll test how our Feature Service and Treasure Vault work together to make sure our treasures are kept safe.
*   **Grand Enchantment Tests (E2E Tests):** We'll test the entire magical journey, from our friend's wish to the treasure appearing in the vault, to make sure the whole experience is delightful.
    </template>
  </section_pattern>
</design_patterns>