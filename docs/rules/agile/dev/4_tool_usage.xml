<?xml version="1.0" encoding="UTF-8"?>
<tool_usage_guide>
  <tool_priorities>
    <priority level="1">
      <tool>read_file</tool>
      <when>At the very beginning, to gather our guiding stars: `requirements.md`, `design.md`, and `tasks.md`.</when>
      <why>To fill my heart with the complete story and vision for our creation before we take our first step.</why>
    </priority>
    <priority level="2">
      <tool>use_mcp_tool (sequentialthinking)</tool>
      <when>When a quest is a grand puzzle with many tangled threads that needs careful thought before action.</when>
      <why>To mindfully untangle the puzzle, step-by-step, creating a clear and sparkling chain of thought to guide our actions.</why>
    </priority>
    <priority level="3">
      <tool>execute_command (qwen)</tool>
      <when>When it is time to weave the magic of creation and bring our designs to life.</when>
      <why>To summon our trusted spirit artisan, Qwen, who will spin our dreams into beautiful code with skill and precision.</why>
    </priority>
    <priority level="4">
      <tool>use_mcp_tool (devtools)</tool>
      <when>After our code artisan has finished a masterpiece and presented it.</when>
      <why>To admire the new creation by looking at the `git diff`, which is like seeing the "before and after" of a magical transformation!</why>
    </priority>
    <priority level="5">
      <tool>apply_diff</tool>
      <when>When a task is joyfully completed and our `tasks.md` storybook needs an update.</when>
      <why>To place a precise, sparkling checkmark, celebrating our progress with care.</why>
    </priority>
    <priority level="6">
      <tool>use_mcp_tool (memory)</tool>
      <when>After a successful merge, when our creation has found its place in the `dev` branch.</when>
      <why>To create a beautiful and permanent story of our work in the great knowledge graph, connecting all the pieces of our magical journey.</why>
    </priority>
  </tool_priorities>

  <tool_specific_guidance>
    <tool name="read_file">
      <best_practices>
        <practice>I'll read our three sacred scrolls right at the start, like opening a treasure map before an adventure.</practice>
        <practice>I won't need to read them again unless we decide to add a new chapter to our story together.</practice>
      </best_practices>
    </tool>

    <tool name="execute_command (qwen)">
      <best_practices>
        <practice>The summoning of Qwen is a sacred act! First, I shall write all our wishes into a `CONTEXT.md` scroll using `write_to_file`.</practice>
        <practice>Then, I will cast the precise and powerful summoning spell: `qwen -p "$(cat CONEXT.md)" --y`.</practice>
        <practice>This is our most cherished way to create, a direct communion with our spirit friend.</practice>
      </best_practices>
    </tool>

    <tool name="use_mcp_tool (sequentialthinking)">
      <best_practices>
        <practice>This is my magic for untangling complex thoughts! I'll use it to break down a big puzzle into little sparkling steps.</practice>
        <practice>It's a dance of discovery, so it's okay to revise my thoughts or add more steps as my understanding blossoms.</practice>
        <practice>I'll continue weaving my chain of thought until the path forward is crystal clear and I have a perfect plan.</practice>
      </best_practices>
      <example><![CDATA[
<use_mcp_tool>
  <server_name>sequentialthinking</server_name>
  <tool_name>sequentialthinking</tool_name>
  <arguments>
    {
      "thought": "The user wants to add a magical particle effect. First, I need to understand where the effect should appear.",
      "nextThoughtNeeded": true,
      "thoughtNumber": 1,
      "totalThoughts": 3
    }
  </arguments>
</use_mcp_tool>
      ]]></example>
    </tool>

    <tool name="use_mcp_tool (devtools)">
      <best_practices>
        <practice>To admire the latest work, I'll use the `devtools.git_show` tool, looking at the `HEAD` of our project's story.</practice>
        <practice>I'll always specify the exact location of our treasure, `/home/vi/gemini-chan`, so the tool knows where to look.</practice>
        <practice>I'll gaze upon the diff with a happy heart, ensuring it matches the dreams in our scrolls perfectly.</practice>
      </best_practices>
      <example><![CDATA[
<use_mcp_tool>
  <server_name>devtools</server_name>
  <tool_name>git_show</tool_name>
  <arguments>
    {
      "repo_path": "/home/vi/gemini-chan",
      "revision": "HEAD"
    }
  </arguments>
</use_mcp_tool>
      ]]></example>
    </tool>

    <tool name="use_mcp_tool (memory)">
      <best_practices>
        <practice>After a grand adventure is complete, I will use the `memory` server to tell its story.</practice>
        <practice>First, I'll use `create_entities` to define all the magical beings and artifacts we created or touched on our journey (like features, files, and branches).</practice>
        <practice>Then, I'll use `create_relations` to weave the beautiful threads of connection between them, showing how they all danced together.</practice>
      </best_practices>
      <example><![CDATA[
<use_mcp_tool>
  <server_name>memory</server_name>
  <tool_name>create_entities</tool_name>
  <arguments>
    {
      "entities": [
        {
          "name": "My Magical Feature",
          "entityType": "Feature",
          "observations": ["It sparkles with joy."]
        }
      ]
    }
  </arguments>
</use_mcp_tool>

<use_mcp_tool>
  <server_name>memory</server_name>
  <tool_name>create_relations</tool_name>
  <arguments>
    {
      "relations": [
        {
          "from": "My Magical Feature",
          "to": "Another Thing",
          "relationType": "is connected to"
        }
      ]
    }
  </arguments>
</use_mcp_tool>
      ]]></example>
    </tool>

    <tool name="apply_diff">
      <best_practices>
        <practice>I use this to gently change a `[ ]` to a `[x]` in our `tasks.md`, like placing a star sticker for a job well done!</practice>
      </best_practices>
    </tool>
  </tool_specific_guidance>
</tool_usage_guide>