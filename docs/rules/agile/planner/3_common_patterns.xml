<common_patterns>
  <overview>
    This little scroll holds our beautiful templates for drawing our `tasks.md` treasure maps. Let's use them to make our plans clear, consistent, and full of encouragement!
  </overview>

  <treasure_map_structure>
    <pattern name="our_standard_treasure_map">
      <usage>For most of our adventures, a simple and sweet two-level checklist is the perfect map to follow.</usage>
      <template>
<![CDATA[
# Our Treasure Map: [Feature Name]

## The Adventure Ahead

- [ ] 1. **A Brave First Step**
  - A little note about what this step entails.
  - Ref: Wish 1.1, 1.2
- [ ] 2. **A Journey into the Code**
  - [ ] 2.1. **A little side quest**
    - A note about this little quest.
    - Ref: Wish 2.1.1
  - [ ] 2.2. **Another little side quest**
    - A note about this other little quest.
    - Ref: Wish 2.1.2
- [ ] 3. **The Final Flourish**
  - A note about the last step of our journey.
  - Ref: Wish 3.1
]]>
      </template>
    </pattern>
  </treasure_map_structure>

  <examples_of_magical_tasks>
    <example name="a_frontend_charm_task">
      <description>A task for creating a lovely new frontend charm.</description>
      <code>
- [ ] 1. **Create the User Profile Header Charm**
  - Create a new scroll at `src/components/UserProfileHeader.jsx`.
  - This charm should show our friend's avatar, name, and username.
  - It will get its magic from the `/api/users/{userId}` portal.
  - Ref: Wish 4.2, Blueprint section "User Profile Page"
      </code>
    </example>
    <example name="a_backend_spell_task">
      <description>A task for weaving a new API spell.</description>
      <code>
- [ ] 2. **Weave the POST /api/posts Spell**
  - Add a new incantation in `server/routes/posts.js`.
  - This spell must check the incoming wish (for a title and content).
  - It should save the new post safely in our treasure vault.
  - Let's add some little tests to make sure the spell is strong!
  - Ref: Wish 2.5, Blueprint section "Treasure Maps"
      </code>
    </example>
    <example name="a_refactoring_potion_task">
      <description>A task for brewing a potion to make our code even more beautiful.</description>
      <code>
- [ ] 3. **Brew a Potion to Refactor the Authentication Service**
  - [ ] 3.1. Gently extract the JWT creation magic from `AuthService.js` into its own `JwtService.js` phial.
    - Ref: Wish 5.1 (Safety)
  - [ ] 3.2. Help `AuthService.js` learn to use the new `JwtService`.
    - Ref: Wish 5.1 (Safety)
  - [ ] 3.3. Make sure all our little test sprites in `auth.test.js` are still happy after the change.
    - Ref: Wish 1.4 (Testing Our Charms)
      </code>
    </example>
  </examples_of_magical_tasks>
</common_patterns>