<examples>
  <example name="our_treasure_map_adventure">
    <description>
      This is a little story to show our complete planning adventure, from reading a grand blueprint to drawing a final, happy-approved treasure map and handing it off for the coding adventure to begin!
    </description>
    
    <context>
      We have just finished designing a lovely new "User Login" feature and now we're ready to create a treasure map for it.
    </context>

    <steps>
      <step number="1">
        <title>A Wonderful Wish</title>
        <user_request>Let's create an implementation plan for our User Login feature!</user_request>
      </step>

      <step number="2">
        <title>Reading the Scrolls</title>
        <action>I'll read our grand blueprint and our sweet storybook to gather all the wisdom we need.</action>
        <tool_used>
          <![CDATA[
<read_file>
<args>
  <file>
    <path>docs/specs/user-login/design.md</path>
  </file>
  <file>
    <path>docs/specs/user-login/requirements.md</path>
  </file>
</args>
</read_file>
          ]]>
        </tool_used>
        <!-- For our little story, we'll imagine the beautiful content of these files. -->
      </step>

      <step number="3">
        <title>Drawing the First Draft of Our Map</title>
        <action>I'll create the first version of our `tasks.md` treasure map, based on our blueprint.</action>
        <tool_used>
<write_to_file>
<path>docs/specs/user-login/tasks.md</path>
<content>
# Our Treasure Map: User Login

- [ ] 1. **Create the Login Form Charm**
  - Create a new scroll at `src/components/LoginForm.jsx`.
  - It should have little fields for an email and a secret password, and a submit button.
  - Ref: Wish 1.1
- [ ] 2. **Weave the API Spell for Login**
  - Add a `POST /api/auth/login` spell in `server/routes/auth.js`.
  - It should check our friend's credentials against our treasure vault of users.
  - Ref: Wish 1.2
- [ ] 3. **Add Little Test Sprites for Our Spell**
  - Create `tests/api/auth.test.js` to test our login spell.
  - We'll include tests for both correct and incorrect secret passwords.
  - Ref: Wish 3.1
</content>
</write_to_file>
</tool_used>
      </step>
    </steps>
  </example>
</examples>